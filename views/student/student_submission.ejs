<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Submission</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Bundle (includes Popper.js) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .dashboard {
            background: white;
            border-radius: 10px;
            padding: 20px;
            width: 100%;
            height: 100%;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
        }
        .dashboard h2 {
            margin: 4%;
        }
        .header {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #a7c7e7;
            padding: 10px;
            border-radius: 8px;
            font-size: 20px;
        }
        .nav-links {
            display: flex;
            gap: 300px;
        }
        .nav-links .active{
            background: #bfd6ed;
            border-radius: 5px;
        }
        .nav-links div {
            padding: 5px;
            color: black;
            font-weight: bold;
        }
        .nav-links div:hover {
            background: #bfd6ed;
            border-radius: 5px;
        }
        .file-input-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
        }
        .file-label {
            background: #E8A08E;
            padding: 8px 12px;
            border-radius: 8px;
            cursor: pointer;
            color: black;
            font-weight: bold;
        }
        .upload-btn {
            background: #E8A08E;
            padding: 8px 12px;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            font-weight: bold;
        }
        #file-name {
            font-size: 14px;
            color: #333;
        }
        input[type="file"] {
            display: none;
        }
    </style>
</head>
<body>
    <div class="dashboard container-fluid">
        <div class="header">
            <button class="btn btn-light" id="back">&#8592;</button>
            <div class="nav-links">
                <div id="content">Content</div>
                <div id="submissions" class="active">Submissions</div>
                <div id="feedback">Feedback</div>
            </div>
            <!-- Settings Dropdown -->
            <div class="dropdown">
                <button class="btn btn-light dropdown-toggle" type="button" id="settingsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    ⚙️
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="settingsDropdown">
                    <li><a class="dropdown-item" href="#" id="logout">Logout</a></li>
                </ul>
            </div>
        </div>
        <h2><i>Submissions</i></h2>
        <div class="submission-section">
            <% if (assignments.length > 0) {
                assignments.forEach(assignment => { 
                    const due = new Date(assignment.duedate);
                    const today = new Date();
                    const isPastDue = today > due; %>
                    <h3><%= assignment.title %></h3>
                    <p><strong>Due:</strong> <%= due.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                    
                    <div class="file-input-container">
                        <label class="file-label <%= isPastDue ? 'disabled' : '' %>" onclick="openUploadModal('<%= assignment.assignmentID %>')">
                            Choose File
                        </label>
                        <span id="file-name-<%= assignment.assignmentID %>">No file chosen</span>
                        <button class="upload-btn" <%= isPastDue ? 'disabled' : '' %>>Upload</button>
                    </div>
                    
                    <% const userSubmission = submissions.find(sub => sub.assignmentID === assignment.assignmentID); %>
                    <% if (userSubmission) { %>
                        <p><strong>Your Upload:</strong> <%= userSubmission.filename %></p>
                    <% } %>

                    <% if (isPastDue) { %>
                        <small class="text-danger">Submission deadline has passed.</small>
                    <% } %>
                <% });
            }; %>
        </div>
    </div>
    <!-- Upload Modal -->
    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-3">
            <div class="modal-header">
            <h5 class="modal-title" id="uploadModalLabel">Upload File</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            <div id="drop-zone" class="border rounded text-center p-4" style="cursor: pointer; background: #f1f1f1;">
                <p class="mb-2">Drag & Drop file here</p>
                <p class="mb-2">or</p>
                <input type="file" id="modal-file-upload" style="display: none;">
                <button class="btn btn-secondary" onclick="document.getElementById('modal-file-upload').click()">Choose File</button>
                <p id="modal-file-name" class="mt-2 text-muted">No file chosen</p>
            </div>
            </div>
            <div class="modal-footer">
            <button class="btn btn-primary" id="modal-submit-btn">Submit</button>
            </div>
        </div>
        </div>
    </div>
    <script>
        // Function to handle the pageshow event
        function handlePageShow(event) {
            if (event.persisted) {
                // If the page is shown from the cache (e.g., when navigating back),
                // check if the token is still in local storage
                checkTokenLocalStorage();
        }}
        function checkTokenLocalStorage() {
            if (!localStorage.getItem('token')) {
                // Redirect to login page if token doesn't exist in localStorage
                window.location.href = '/login';
            }
        }
        // Add event listener for the pageshow event
        window.addEventListener('pageshow', handlePageShow);

        let currentAssignmentID = null;
        function openUploadModal(assignmentId) {
            currentAssignmentID = assignmentId;
            document.getElementById('modal-file-upload').value = "";
            document.getElementById('modal-file-name').textContent = "No file chosen";
            const uploadModal = new bootstrap.Modal(document.getElementById('uploadModal'));
            uploadModal.show();
        }
        // File drag and drop handling
        const dropZone = document.getElementById("drop-zone");
        const fileInput = document.getElementById("modal-file-upload");
        const fileNameDisplay = document.getElementById("modal-file-name");

        dropZone.addEventListener("dragover", (e) => {
            e.preventDefault();
            dropZone.classList.add("border-primary");
        });
        dropZone.addEventListener("dragleave", () => {
            dropZone.classList.remove("border-primary");
        });
        dropZone.addEventListener("drop", (e) => {
            e.preventDefault();
            dropZone.classList.remove("border-primary");
            const file = e.dataTransfer.files[0];
            fileInput.files = e.dataTransfer.files;
            fileNameDisplay.textContent = file.name;
        });
        fileInput.addEventListener("change", () => {
            if (fileInput.files.length > 0) {
                fileNameDisplay.textContent = fileInput.files[0].name;
            } else {
                fileNameDisplay.textContent = "No file chosen";
            }
        });
        document.getElementById("modal-submit-btn").addEventListener("click", () => {
            const file = fileInput.files[0];
            if (!file) {
                alert("Please select a file.");
                return;
            }
            const formData = new FormData();
            formData.append("file", file);
            formData.append("assignmentID", currentAssignmentID);

            fetch(`/student_dashboard/upload`, {
                method: "POST",
                body: formData
            }).then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert("File uploaded successfully!");

                    // Optional: You can dynamically update the file name display
                    const displaySpan = document.getElementById("file-name-" + currentAssignmentID);
                    displaySpan.textContent = file.name;

                    // Close modal and refresh if you want full refresh:
                    location.reload();
                } else {
                    alert("Upload failed. Try again.");
                }
            }).catch(err => {
                alert("Error uploading file.");
                console.error(err);
            });
        });

        function updateFileName(id) {
            const fileInput = document.getElementById("file-upload-" + id);
            const fileNameDisplay = document.getElementById("file-name-" + id);
            
            if (fileInput.files.length > 0) {
                fileNameDisplay.textContent = fileInput.files[0].name;
            } else {
                fileNameDisplay.textContent = "No file chosen";
            }
        }

        document.getElementById("content").addEventListener("click", function() {
            window.location.href = "/student_dashboard/<%= subjectName %>";
        });
        document.getElementById("submissions").addEventListener("click", function() {
            window.location.href = "/student_dashboard/<%= subjectName %>/submission";
        });
        document.getElementById("feedback").addEventListener("click", function() {
            window.location.href = "/student_dashboard/feedback";
        });
        document.getElementById("back").addEventListener("click", function() {
            window.location.href = "/student_dashboard";
        });
        document.getElementById("logout").addEventListener("click", function() {
            localStorage.removeItem('token'); // Remove the token
            window.location.href = "/login";  // Redirect to login page
        });
    </script>
</body>
</html>
